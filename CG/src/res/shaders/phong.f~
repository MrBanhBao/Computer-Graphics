varying vec4 color;
varying vec4 texture2D;
varying vec3 N;
varying vec3 v;    
void main (void)  
{  
   vec3 L = normalize(gl_LightSource[0].position.xyz - v);   
   vec3 E = normalize(-v);
   vec3 R = normalize(-reflect(L,N));  
 

   vec4 Iamb = gl_FrontLightProduct[0].ambient;    //Ambient Licht berechnen

   
   vec4 Idiff = gl_FrontLightProduct[0].diffuse * max(dot(N,L), 0.0); //Diffuses Licht berechnen
   Idiff = clamp(Idiff, 0.0, 1.0);     
   
   vec4 Ispec = gl_FrontLightProduct[0].specular 			//Speculares Licht berchnen
                * pow(max(dot(R,E),0.0),0.3*gl_FrontMaterial.shininess);
   Ispec = clamp(Ispec, 0.0, 1.0); 

   gl_FragColor = gl_FrontLightModelProduct.sceneColor + color + texture2D(sampler, uv) + Iamb + Idiff + Ispec; //Ergebnis     
}
